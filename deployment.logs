adarsh@YOGA:~/Projects/StreamFlow---a-video-transcoder$ ./quick-deploy.sh 
🚀 Starting StreamFlow deployment with default configuration...
Checking required tools...
✅ All required tools are available
==== StreamFlow Deployment ====
Region: ap-south-1
Source Bucket: temp-videos.adarshsahu.site
Destination Bucket: production.adarshsahu.site
Account ID: 534613823192
==============================
Installing dependencies...
Installing API dependencies...
npm warn Unknown builtin config "globalignorefile". This will stop working in the next major version of npm.
npm warn deprecated querystring@0.2.0: The querystring API is considered Legacy. new code should use the URLSearchParams API instead.

added 187 packages, and audited 188 packages in 2s

22 packages are looking for funding
  run `npm fund` for details

found 0 vulnerabilities
Installing Consumer dependencies...
npm warn Unknown builtin config "globalignorefile". This will stop working in the next major version of npm.
npm warn deprecated querystring@0.2.0: The querystring API is considered Legacy. new code should use the URLSearchParams API instead.

added 165 packages, and audited 166 packages in 2s

23 packages are looking for funding
  run `npm fund` for details

found 0 vulnerabilities
Installing Job dependencies...
npm warn Unknown builtin config "globalignorefile". This will stop working in the next major version of npm.

up to date, audited 148 packages in 1s

6 packages are looking for funding
  run `npm fund` for details

found 0 vulnerabilities
Installing Frontend dependencies...
npm warn Unknown builtin config "globalignorefile". This will stop working in the next major version of npm.
npm warn deprecated har-validator@5.1.5: this library is no longer supported
npm warn deprecated uuid@3.4.0: Please upgrade  to version 7 or higher.  Older versions may use Math.random() in certain circumstances, which is known to be problematic.  See https://v8.dev/blog/math-random for details.
npm warn deprecated request@2.88.2: request has been deprecated, see https://github.com/request/request/issues/3142

added 280 packages, and audited 281 packages in 3s

39 packages are looking for funding
  run `npm fund` for details

6 vulnerabilities (4 moderate, 2 critical)

To address all issues possible (including breaking changes), run:
  npm audit fix --force

Some issues need review, and may require choosing
a different dependency.

Run `npm audit` for details.
Creating S3 buckets...
make_bucket: temp-videos.adarshsahu.site
make_bucket: production.adarshsahu.site
Configuring destination bucket for static website hosting...
Disabling Block Public Access settings...
Configuring CORS on destination bucket...
Configuring CORS on source bucket...
Enabling static website hosting...
Building Lambda functions...
npm warn Unknown builtin config "globalignorefile". This will stop working in the next major version of npm.

> sqs-transcode-consumer@1.0.0 build
> tsc

npm warn Unknown builtin config "globalignorefile". This will stop working in the next major version of npm.

> streamflow-api@1.0.0 build
> tsc

Building and pushing Docker image...
[+] Building 2.5s (14/14) FINISHED                                                                                        docker:default
 => [internal] load build definition from Dockerfile                                                                                0.0s
 => => transferring dockerfile: 233B                                                                                                0.0s
 => [internal] load metadata for docker.io/library/node:18-alpine                                                                   2.2s
 => [internal] load .dockerignore                                                                                                   0.0s
 => => transferring context: 2B                                                                                                     0.0s
 => [1/9] FROM docker.io/library/node:18-alpine@sha256:8d6421d663b4c28fd3ebc498332f249011d118945588d0a35cb9bc4b8ca09d9e             0.0s
 => [internal] load build context                                                                                                   0.2s
 => => transferring context: 908.50kB                                                                                               0.1s
 => CACHED [2/9] RUN apk update                                                                                                     0.0s
 => CACHED [3/9] RUN apk upgrade                                                                                                    0.0s
 => CACHED [4/9] RUN apk add --no-cache ffmpeg                                                                                      0.0s
 => CACHED [5/9] WORKDIR /app                                                                                                       0.0s
 => CACHED [6/9] COPY package.json .                                                                                                0.0s
 => CACHED [7/9] COPY package-lock.json .                                                                                           0.0s
 => CACHED [8/9] RUN npm install                                                                                                    0.0s
 => CACHED [9/9] COPY . .                                                                                                           0.0s
 => exporting to image                                                                                                              0.0s
 => => exporting layers                                                                                                             0.0s
 => => writing image sha256:db65a8d38512592a535810ef10aab7f6f0566f34415f324ad762235e3811fa07                                        0.0s
 => => naming to docker.io/library/video-transcoder                                                                                 0.0s

An error occurred (RepositoryNotFoundException) when calling the DescribeRepositories operation: The repository with name 'video-transcoder' does not exist in the registry with id '534613823192'
{
    "repository": {
        "repositoryArn": "arn:aws:ecr:ap-south-1:534613823192:repository/video-transcoder",
        "registryId": "534613823192",
        "repositoryName": "video-transcoder",
        "repositoryUri": "534613823192.dkr.ecr.ap-south-1.amazonaws.com/video-transcoder",
        "createdAt": "2025-07-31T10:53:50.419000+05:30",
        "imageTagMutability": "MUTABLE",
        "imageScanningConfiguration": {
            "scanOnPush": false
        },
        "encryptionConfiguration": {
            "encryptionType": "AES256"
        }
    }
}

WARNING! Your credentials are stored unencrypted in '/home/adarsh/.docker/config.json'.
Configure a credential helper to remove this warning. See
https://docs.docker.com/go/credential-store/

Login Succeeded
The push refers to repository [534613823192.dkr.ecr.ap-south-1.amazonaws.com/video-transcoder]
d6207232e2bc: Pushed 
d51cbb667fb0: Pushed 
9ea826507559: Pushed 
80d6ce7045fe: Pushed 
5425a6b8aaf9: Pushed 
1c2d8128f8d8: Pushed 
876f07f2db41: Pushed 
0165b99d662e: Pushed 
82140d9a70a7: Pushed 
f3b40b0cdb1c: Pushed 
0b1f26057bd0: Pushed 
08000c18d16d: Pushed 
latest: digest: sha256:a7065036ae4448d403d59292128d0c34da8ec382f5086870fa56385007adac64 size: 2836
Setting up ECS resources...
Deleting existing ECS cluster: video-transcoder-cluster (status: INACTIVE)
{
    "cluster": {
        "clusterArn": "arn:aws:ecs:ap-south-1:534613823192:cluster/video-transcoder-cluster",
        "clusterName": "video-transcoder-cluster",
        "status": "INACTIVE",
        "registeredContainerInstancesCount": 0,
        "runningTasksCount": 0,
        "pendingTasksCount": 0,
        "activeServicesCount": 0,
        "statistics": [],
        "tags": [],
        "settings": [
            {
                "name": "containerInsights",
                "value": "disabled"
            }
        ],
        "capacityProviders": [],
        "defaultCapacityProviderStrategy": [],
        "attachments": []
    }
}
Creating ECS cluster: video-transcoder-cluster
{
    "cluster": {
        "clusterArn": "arn:aws:ecs:ap-south-1:534613823192:cluster/video-transcoder-cluster",
        "clusterName": "video-transcoder-cluster",
        "status": "ACTIVE",
        "registeredContainerInstancesCount": 0,
        "runningTasksCount": 0,
        "pendingTasksCount": 0,
        "activeServicesCount": 0,
        "statistics": [],
        "tags": [],
        "settings": [
            {
                "name": "containerInsights",
                "value": "disabled"
            }
        ],
        "capacityProviders": [],
        "defaultCapacityProviderStrategy": []
    }
}
✅ ECS cluster created successfully
Creating IAM roles...
Creating ECS Task Execution Role...
{
    "Role": {
        "Path": "/",
        "RoleName": "ecsTaskExecutionRole",
        "RoleId": "AROAXY6LXR3MBGYXEYSPG",
        "Arn": "arn:aws:iam::534613823192:role/ecsTaskExecutionRole",
        "CreateDate": "2025-07-31T05:24:30+00:00",
        "AssumeRolePolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [
                {
                    "Effect": "Allow",
                    "Principal": {
                        "Service": "ecs-tasks.amazonaws.com"
                    },
                    "Action": "sts:AssumeRole"
                }
            ]
        }
    }
}
^[[Bq
Creating CloudWatch Log Group...
Registering ECS task definition...
✅ Task definition registered successfully: arn:aws:ecs:ap-south-1:534613823192:task-definition/video-transcoder:24
Deploying serverless application...

Deploying "streamflow" to stage "dev" (ap-south-1)

✔ Service deployed to stack streamflow-dev (119s)

endpoints:
  GET - https://c6oi85flik.execute-api.ap-south-1.amazonaws.com/dev/videos
  GET - https://c6oi85flik.execute-api.ap-south-1.amazonaws.com/dev/videos/{id}
  POST - https://c6oi85flik.execute-api.ap-south-1.amazonaws.com/dev/videos/upload
functions:
  videoProcessor: streamflow-dev-videoProcessor (50 MB)
  getVideos: streamflow-dev-getVideos (50 MB)
  getVideo: streamflow-dev-getVideo (50 MB)
  getUploadUrl: streamflow-dev-getUploadUrl (50 MB)

Getting API endpoint...
✅ Found API endpoint: https://c6oi85flik.execute-api.ap-south-1.amazonaws.com/dev
✅ Updated frontend/.env with API endpoint
Building React frontend with API endpoint...
npm warn Unknown builtin config "globalignorefile". This will stop working in the next major version of npm.

up to date, audited 281 packages in 896ms

39 packages are looking for funding
  run `npm fund` for details

6 vulnerabilities (4 moderate, 2 critical)

To address all issues possible (including breaking changes), run:
  npm audit fix --force

Some issues need review, and may require choosing
a different dependency.

Run `npm audit` for details.
npm warn Unknown builtin config "globalignorefile". This will stop working in the next major version of npm.

> streamflow-frontend@0.1.0 build
> vite build

vite v4.5.14 building for production...
✓ 109 modules transformed.
dist/index.html                   0.86 kB │ gzip:   0.40 kB
dist/assets/index-403a330c.css   22.17 kB │ gzip:   4.51 kB
dist/assets/index-0dc88e6c.js   894.31 kB │ gzip: 270.18 kB

(!) Some chunks are larger than 500 kBs after minification. Consider:
- Using dynamic import() to code-split the application
- Use build.rollupOptions.output.manualChunks to improve chunking: https://rollupjs.org/configuration-options/#output-manualchunks
- Adjust chunk size limit for this warning via build.chunkSizeWarningLimit.
✓ built in 2.57s
Uploading frontend...
upload: frontend/dist/url-fix.js to s3://production.adarshsahu.site/url-fix.js
upload: frontend/dist/index.html to s3://production.adarshsahu.site/index.html
upload: frontend/dist/assets/index-403a330c.css to s3://production.adarshsahu.site/assets/index-403a330c.css
upload: frontend/dist/assets/index-0dc88e6c.js to s3://production.adarshsahu.site/assets/index-0dc88e6c.js
Applying bucket policy...
Configuring SQS policy for S3 notificanotificationstions...
Applying SQS policy to allow S3 notifications...
Waiting for SQS policy to propagate...
Configuring S3 bucket notifications...
==== Deployment Complete ====
Frontend URL: http://production.adarshsahu.site.s3-website.ap-south-1.amazonaws.com
API Endpoint: https://c6oi85flik.execute-api.ap-south-1.amazonaws.com/dev
Verifying website accessibility...
✅ Website is accessible at: http://production.adarshsahu.site.s3-website.ap-south-1.amazonaws.com
Verifying S3 notifications...
✅ S3 → SQS notifications configured
✅ SQS queue exists: video-upload-queue
✅ DynamoDB table exists: VideoMetadata
Verifying ECS resources...
✅ ECS cluster exists and is active: video-transcoder-cluster
✅ ECS task definition exists: arn:aws:ecs:ap-south-1:534613823192:task-definition/video-transcoder:24
Verifying IAM roles...
✅ ECS execution role exists: ecsTaskExecutionRole
✅ ECS task role exists: ECSTask-VideoTranscoder-Role
✅ ECS task policy is attached: VideoTranscoderTaskPolicy
==============================
To test the system, upload a video to the source bucket:
aws s3 cp your-video.mp4 s3://temp-videos.adarshsahu.site/username###video-name.mp4
✅ Deployment complete!

📋 What was deployed:
   🗄️  S3 buckets with CORS and policies
   🔄 SQS queue with S3 notification permissions
   📡 S3 → SQS notifications for video uploads
   ⚡ Lambda functions (API + Consumer) with enhanced logging
   🐳 Docker image for video transcoding job
   📊 DynamoDB table for video metadata
   🌐 React frontend with upload interface

🔗 Access your app at:
   Frontend: http://production.adarshsahu.site.s3-website.ap-south-1.amazonaws.com

🧪 Test the pipeline:
   aws s3 cp /path/to/video.mp4 s3://temp-videos.adarshsahu.site/username###my-video.mp4
   Then check CloudWatch logs: ./monitor-logs.sh