adarsh@YOGA:~/Projects/StreamFlow$ ./deploy.sh -s temp-videos.adarshsahu.site -d production.adarshsahu.site
==== StreamFlow Deployment ====
Region: ap-south-1
Source Bucket: temp-videos.adarshsahu.site
Destination Bucket: production.adarshsahu.site
Account ID: 534613823192
==============================
Creating S3 buckets...
make_bucket: temp-videos.adarshsahu.site
make_bucket: production.adarshsahu.site
Configuring CORS on destination bucket...
Building Lambda functions...
npm warn Unknown builtin config "globalignorefile". This will stop working in the next major version of npm.

> sqs-transcode-consumer@1.0.0 build
> tsc

npm warn Unknown builtin config "globalignorefile". This will stop working in the next major version of npm.

> streamflow-api@1.0.0 build
> tsc

Building React frontend...
npm warn Unknown builtin config "globalignorefile". This will stop working in the next major version of npm.

up to date, audited 281 packages in 3s

39 packages are looking for funding
  run `npm fund` for details

6 vulnerabilities (4 moderate, 2 critical)

To address all issues possible (including breaking changes), run:
  npm audit fix --force

Some issues need review, and may require choosing
a different dependency.

Run `npm audit` for details.
npm warn Unknown builtin config "globalignorefile". This will stop working in the next major version of npm.

> streamflow-frontend@0.1.0 build
> tsc && vite build

Version 5.8.3
tsc: The TypeScript Compiler - Version 5.8.3                                                                            
                                                                                                                     TS 
COMMON COMMANDS

  tsc
  Compiles the current project (tsconfig.json in the working directory.)

  tsc app.ts util.ts
  Ignoring tsconfig.json, compiles the specified files with default compiler options.

  tsc -b
  Build a composite project in the working directory.

  tsc --init
  Creates a tsconfig.json with the recommended settings in the working directory.

  tsc -p ./path/to/tsconfig.json
  Compiles the TypeScript project located at the specified path.

  tsc --help --all
  An expanded version of this information, showing all possible compiler options

  tsc --noEmit
  tsc --target esnext
  Compiles the current project, with additional settings.

COMMAND LINE FLAGS

     --help, -h  Print this message.

    --watch, -w  Watch input files.

          --all  Show all compiler options.

  --version, -v  Print the compiler's version.

         --init  Initializes a TypeScript project and creates a tsconfig.json file.

  --project, -p  Compile the project given the path to its configuration file, or to a folder with a 'tsconfig.json'.

   --showConfig  Print the final configuration instead of building.

    --build, -b  Build one or more projects and their dependencies, if out of date

COMMON COMPILER OPTIONS

               --pretty  Enable color and formatting in TypeScript's output to make compiler errors easier to read.
                  type:  boolean
               default:  true

      --declaration, -d  Generate .d.ts files from TypeScript and JavaScript files in your project.
                  type:  boolean
               default:  `false`, unless `composite` is set

       --declarationMap  Create sourcemaps for d.ts files.
                  type:  boolean
               default:  false

  --emitDeclarationOnly  Only output d.ts files and not JavaScript files.
                  type:  boolean
               default:  false

            --sourceMap  Create source map files for emitted JavaScript files.
                  type:  boolean
               default:  false

               --noEmit  Disable emitting files from a compilation.
                  type:  boolean
               default:  false

           --target, -t  Set the JavaScript language version for emitted JavaScript and include compatible library declarations.
                one of:  es5, es6/es2015, es2016, es2017, es2018, es2019, es2020, es2021, es2022, es2023, es2024, esnext
               default:  es5

           --module, -m  Specify what module code is generated.
                one of:  none, commonjs, amd, umd, system, es6/es2015, es2020, es2022, esnext, node16, node18, nodenext, preserve
               default:  undefined

                  --lib  Specify a set of bundled library declaration files that describe the target runtime environment.
           one or more:  es5, es6/es2015, es7/es2016, es2017, es2018, es2019, es2020, es2021, es2022, es2023, es2024, esnext, dom, dom.                         iterable, dom.asynciterable, webworker, webworker.importscripts, webworker.iterable, webworker.asynciterable,                          scripthost, es2015.core, es2015.collection, es2015.generator, es2015.iterable, es2015.promise, es2015.proxy, e                         s2015.reflect, es2015.symbol, es2015.symbol.wellknown, es2016.array.include, es2016.intl, es2017.arraybuffer,                          es2017.date, es2017.object, es2017.sharedmemory, es2017.string, es2017.intl, es2017.typedarrays, es2018.asyncg                         enerator, es2018.asynciterable/esnext.asynciterable, es2018.intl, es2018.promise, es2018.regexp, es2019.array,                          es2019.object, es2019.string, es2019.symbol/esnext.symbol, es2019.intl, es2020.bigint/esnext.bigint, es2020.d                         ate, es2020.promise, es2020.sharedmemory, es2020.string, es2020.symbol.wellknown, es2020.intl, es2020.number,                          es2021.promise, es2021.string, es2021.weakref/esnext.weakref, es2021.intl, es2022.array, es2022.error, es2022.                         intl, es2022.object, es2022.string, es2022.regexp, es2023.array, es2023.collection, es2023.intl, es2024.arrayb                         uffer, es2024.collection, es2024.object/esnext.object, es2024.promise, es2024.regexp/esnext.regexp, es2024.sha                         redmemory, es2024.string/esnext.string, esnext.array, esnext.collection, esnext.intl, esnext.disposable, esnex                         t.promise, esnext.decorators, esnext.iterator, esnext.float16, decorators, decorators.legacy
               default:  undefined

              --allowJs  Allow JavaScript files to be a part of your program. Use the 'checkJS' option to get errors from these files.
                  type:  boolean
               default:  false

              --checkJs  Enable error reporting in type-checked JavaScript files.
                  type:  boolean
               default:  false

                  --jsx  Specify what JSX code is generated.
                one of:  preserve, react, react-native, react-jsx, react-jsxdev
               default:  undefined

              --outFile  Specify a file that bundles all outputs into one JavaScript file. If 'declaration' is true, also designates a                          file that bundles all .d.ts output.

               --outDir  Specify an output folder for all emitted files.

       --removeComments  Disable emitting comments.
                  type:  boolean
               default:  false

               --strict  Enable all strict type-checking options.
                  type:  boolean
               default:  false

                --types  Specify type package names to be included without being referenced in a source file.

      --esModuleInterop  Emit additional JavaScript to ease support for importing CommonJS modules. This enables 'allowSyntheticDefault                         Imports' for type compatibility.
                  type:  boolean
               default:  false

You can learn about all of the compiler options at https://aka.ms/tsc

Building and pushing Docker image...
[+] Building 2.3s (14/14) FINISHED                                                                                      docker:default
 => [internal] load build definition from Dockerfile                                                                              0.0s
 => => transferring dockerfile: 243B                                                                                              0.0s
 => [internal] load metadata for docker.io/library/node:18-alpine                                                                 2.2s
 => [internal] load .dockerignore                                                                                                 0.0s
 => => transferring context: 2B                                                                                                   0.0s
 => [1/9] FROM docker.io/library/node:18-alpine@sha256:8d6421d663b4c28fd3ebc498332f249011d118945588d0a35cb9bc4b8ca09d9e           0.0s
 => [internal] load build context                                                                                                 0.0s
 => => transferring context: 100B                                                                                                 0.0s
 => CACHED [2/9] RUN apk update                                                                                                   0.0s
 => CACHED [3/9] RUN apk upgrade                                                                                                  0.0s
 => CACHED [4/9] RUN apk add --no-cache ffmpeg                                                                                    0.0s
 => CACHED [5/9] WORKDIR /app                                                                                                     0.0s
 => CACHED [6/9] COPY package.json .                                                                                              0.0s
 => CACHED [7/9] COPY package-lock.json .                                                                                         0.0s
 => CACHED [8/9] RUN npm install                                                                                                  0.0s
 => CACHED [9/9] COPY index.js .                                                                                                  0.0s
 => exporting to image                                                                                                            0.0s
 => => exporting layers                                                                                                           0.0s
 => => writing image sha256:8c371c279ef30fb061c4fa2be3421ce186767a9baf28ec229344b176911b3f88                                      0.0s
 => => naming to docker.io/library/video-transcoder                                                                               0.0s

An error occurred (RepositoryNotFoundException) when calling the DescribeRepositories operation: The repository with name 'video-transcoder' does not exist in the registry with id '534613823192'
{
    "repository": {
        "repositoryArn": "arn:aws:ecr:ap-south-1:534613823192:repository/video-transcoder",
        "registryId": "534613823192",
        "repositoryName": "video-transcoder",
        "repositoryUri": "534613823192.dkr.ecr.ap-south-1.amazonaws.com/video-transcoder",
        "createdAt": "2025-07-28T23:07:09.736000+05:30",
        "imageTagMutability": "MUTABLE",
        "imageScanningConfiguration": {
            "scanOnPush": false
        },
        "encryptionConfiguration": {
            "encryptionType": "AES256"
        }
    }
}
WARNING! Your credentials are stored unencrypted in '/home/adarsh/.docker/config.json'.
Configure a credential helper to remove this warning. See
https://docs.docker.com/go/credential-store/

Login Succeeded
The push refers to repository [534613823192.dkr.ecr.ap-south-1.amazonaws.com/video-transcoder]
132b6eea3d07: Preparing 
d51cbb667fb0: Preparing 
d51cbb667fb0: Pushed 
80d6ce7045fe: Pushed 
5425a6b8aaf9: Pushed 
1c2d8128f8d8: Pushing [=========>                                         ]  23.01MB/124.6MB
1c2d8128f8d8: Pushed 
1c2d8128f8d8: Pushing  91.86MB/124.6MB
82140d9a70a7: Pushed 
f3b40b0cdb1c: Pushed 
0b1f26057bd0: Pushing [>                                                  ]  2.216MB/113.8MB
0b1f26057bd0: Pushed 
08000c18d16d: Pushed 
latest: digest: sha256:e7c097485014db3b0416ca6a2cc2db88c9aa3d016c8081fc2cdd5f54f3a7a778 size: 2833
Setting up ECS resources...
{
    "clusters": [],
    "failures": [
        {
            "arn": "arn:aws:ecs:ap-south-1:534613823192:cluster/video-transcoder-cluster",
            "reason": "MISSING"
        }
    ]
}
Creating IAM roles...
Registering ECS task definition...
{
    "taskDefinition": {
        "taskDefinitionArn": "arn:aws:ecs:ap-south-1:534613823192:task-definition/video-transcoder:4",
        "containerDefinitions": [
            {
                "name": "video-transcoder",
                "image": "534613823192.dkr.ecr.ap-south-1.amazonaws.com/video-transcoder:latest",
                "cpu": 0,
                "portMappings": [],
                "essential": true,
                "environment": [],
                "mountPoints": [],
                "volumesFrom": [],
                "logConfiguration": {
                    "logDriver": "awslogs",
                    "options": {
                        "awslogs-group": "/ecs/video-transcoder",
                        "awslogs-region": "ap-south-1",
                        "awslogs-stream-prefix": "ecs"
                    }
                },
                "systemControls": []
            }
        ],
        "family": "video-transcoder",
        "taskRoleArn": "arn:aws:iam::534613823192:role/videoTranscoderTaskRole",
        "executionRoleArn": "arn:aws:iam::534613823192:role/ecsTaskExecutionRole",
        "networkMode": "awsvpc",
        "revision": 4,
        "volumes": [],
        "status": "ACTIVE",
        "requiresAttributes": [
            {
                "name": "com.amazonaws.ecs.capability.logging-driver.awslogs"
            },
            {
                "name": "ecs.capability.execution-role-awslogs"
            },
            {
                "name": "com.amazonaws.ecs.capability.ecr-auth"
            },
            {
                "name": "com.amazonaws.ecs.capability.docker-remote-api.1.19"
            },
            {
                "name": "com.amazonaws.ecs.capability.task-iam-role"
            },
            {
                "name": "ecs.capability.execution-role-ecr-pull"
            },
            {
                "name": "com.amazonaws.ecs.capability.docker-remote-api.1.18"
            },
            {
                "name": "ecs.capability.task-eni"
            }
        ],
        "placementConstraints": [],
        "compatibilities": [
            "EC2",
            "FARGATE"
        ],
        "requiresCompatibilities": [
            "FARGATE"
        ],
        "cpu": "1024",
        "memory": "2048",
        "registeredAt": "2025-07-28T23:09:42.171000+05:30",
        "registeredBy": "arn:aws:iam::534613823192:root"
    }
}
Deploying serverless application...

✔ Installed Serverless Framework v4.17.2

✔ Serverless Framework V4 CLI is free for developers and organizations making less than $2 million annually, but requires an account or a license key.

Please login/register or enter your license key: · Enter A License Key


Obtain a Serverless Framework License Key through the dashboard at https://app.serverless.com, suitable for those not using the dashboard personally or in a team. Get licenses via the Dashboard or AWS Marketplace. For pricing, visit https://serverless.com. For inquiries, email support@serverless.com.

✔ Enter your License Key (input will be hidden) · 

✔ License Key successfully validated and saved.

Deploying "streamflow" to stage "dev" (ap-south-1)

✔ Service deployed to stack streamflow-dev (144s)

endpoints:
  GET - https://zvxoqd9fuc.execute-api.ap-south-1.amazonaws.com/dev/videos
  GET - https://zvxoqd9fuc.execute-api.ap-south-1.amazonaws.com/dev/videos/{id}
  POST - https://zvxoqd9fuc.execute-api.ap-south-1.amazonaws.com/dev/videos/upload
functions:
  videoProcessor: streamflow-dev-videoProcessor (54 MB)
  getVideos: streamflow-dev-getVideos (54 MB)
  getVideo: streamflow-dev-getVideo (54 MB)
  getUploadUrl: streamflow-dev-getUploadUrl (54 MB)

Uploading frontend...

The user-provided path frontend/dist/ does not exist.
Initializing
Initializing
Authenticating
Resolving variables
Resolving variables
Fetching Service Information
service: streamflow

stage: dev

region: ap-south-1

stack: streamflow-dev

endpoints:
  GET - https://zvxoqd9fuc.execute-api.ap-south-1.amazonaws.com/dev/videos
  GET - https://zvxoqd9fuc.execute-api.ap-south-1.amazonaws.com/dev/videos/{id}
  POST - https://zvxoqd9fuc.execute-api.ap-south-1.amazonaws.com/dev/videos/upload

functions:
  videoProcessor: streamflow-dev-videoProcessor
  getVideos: streamflow-dev-getVideos
  getVideo: streamflow-dev-getVideo
  getUploadUrl: streamflow-dev-getUploadUrl

Stack Outputs:
  GetUploadUrlLambdaFunctionQualifiedArn: arn:aws:lambda:ap-south-1:534613823192:function:streamflow-dev-getUploadUrl:1
  ApiEndpoint: https://zvxoqd9fuc.execute-api.ap-south-1.amazonaws.com/dev
  VideoProcessorLambdaFunctionQualifiedArn: arn:aws:lambda:ap-south-1:534613823192:function:streamflow-dev-videoProcessor:1
  GetVideosLambdaFunctionQualifiedArn: arn:aws:lambda:ap-south-1:534613823192:function:streamflow-dev-getVideos:1
  GetVideoLambdaFunctionQualifiedArn: arn:aws:lambda:ap-south-1:534613823192:function:streamflow-dev-getVideo:1
  VideoTable: VideoMetadata
  ServiceEndpoint: https://zvxoqd9fuc.execute-api.ap-south-1.amazonaws.com/dev
  ServerlessDeploymentBucketName: serverless-framework-deployments-ap-south-1-33f4cf50-1d8b

Finalizing
==== Deployment Complete ====
Frontend URL: http://production.adarshsahu.site.s3-website-ap-south-1.amazonaws.com
API Endpoint: 
============================
To test the system, upload a video to the source bucket:
aws s3 cp your-video.mp4 s3://temp-videos.adarshsahu.site/username###video-name.mp4